
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<img name="main" id="main" border="0" width="640" background="red" height="480" src="http://10.0.4.201:80/loginuse=admin;loginpas=admin">*@

<style>
    /* display loading gif and hide webpage */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background: rgba( 255, 255, 255, .8) url('http://i.stack.imgur.com/FhHRx.gif') 50% 50% no-repeat;
    }

    /* prevent scrollbar from display during load */
    body.loading {
        overflow: hidden;
    }

        /* display the modal when loading class is added to body */
        body.loading .modal {
            display: block;
        }
</style>

<!DOCTYPE html>
<html>
<head>
    <title>OpenCV.js</title>
</head>
<body>
    <div class="modal"></div>
    <canvas id="imageCanvas"></canvas>

    <button type="button" id="circlesButton" class="btn btn-primary">Circle Detection</button>

    <a href="#" id="downloadButton">Download Image</a>


    <script type="text/javascript">
   

        document.getElementById('circlesButton').onclick = function () {
            this.disabled = true;
            document.body.classList.add('loading');

            let srcMat = cv.imread('imageCanvas');
            let displayMat = srcMat.clone();
            let circlesMat = new cv.Mat();

            cv.cvtColor(srcMat, srcMat, cv.COLOR_RGBA2GRAY);

            cv.HoughCircles(srcMat, circlesMat, cv.HOUGH_GRADIENT, 1, 45, 75, 40, 0, 0);

            for (let i = 0; i < circlesMat.cols; ++i) {
                let x = circlesMat.data32F[i * 3];
                let y = circlesMat.data32F[i * 3 + 1];
                let radius = circlesMat.data32F[i * 3 + 2];
                let center = new cv.Point(x, y);

                // draw circles
                cv.circle(displayMat, center, radius, [0, 0, 0, 255], 3);
            }

            cv.imshow('imageCanvas', displayMat);

            srcMat.delete();
            displayMat.delete();
            circlesMat.delete();

            this.disabled = false;
            document.body.classList.remove('loading');
        };
        // previous code is here

        document.getElementById('downloadButton').onclick = function () {
            this.href = document.getElementById('imageCanvas').toDataURL();
            this.download = 'image.png';
        };
    </script>
    <script async src="opencv.js" onload="onOpenCvReady();" type="text/javascript"></script>
    <script async src="opencv.js" type="text/javascript"></script>
</body>
</html>

